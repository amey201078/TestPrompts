Technical Design Document (TDD): CRM MVP Journey Planning
for Dynamics 365 Customer Engagement 
1. Introduction
This Technical Design Document (TDD) translates the requirements from the Functional Design Document (FDD) into technical specifications for the CRM MVP Journey Planning solution on Dynamics 365 CE.
The document covers system architecture, customizations, integrations, security, and provides detailed technical mappings, configuration steps, and pseudocode where applicable. Tables and visual descriptions are used for clarity. 
2. Functional Requirements Coverage & Technical Interpretation
The following table maps each major functional area from the FDD to its technical implementation in Dynamics 365 CE. 
Table 1: Functional-to-Technical Mapping Overview 
FDD Functional RequirementTechnical Solution/ComponentCustomizations/EntitiesIntegration PointsSales Call Management (Automated & Manual Scheduling)- Custom Workflow/Plugin for auto-scheduling
- Business Rules for manual validation
- Custom Forms & Views
- Outlook Calendar Sync - NF_SalesCall (Custom Entity)
- NF_Tiering (Custom Entity)
- Fields for scheduling, tier, etc. Dynamics 365 CE ? OutlookJourney Route OptimizationCustom Plugin + PCF Map Control- NF_JourneyPlan (Custom Entity)
- NF_StartLocation, NF_EndLocationDynamics 365 CE ? Navigation Apps (Google Maps, Waze)Mobile & Offline AccessModel-driven App + Mobile App Config- Mobile Profiles -Reporting & AnalyticsPower BI Integration, Custom Reports- NF_CallReport (Custom Entity) Dynamics 365 CE ? Power BIException Handling, Rescheduling- Custom Workflows
- Reason Code Option Sets - NF_RescheduleReason (Custom OptionSet) -Security & Access Control- Role-based Security Roles
- Field-level Security - Security Roles: ASM, RSM, RSD, SD -3. Customization Analysis
3.1 Custom Entities (with Publisher Prefix "NF")
Custom Entity NameSchema NameDescriptionSales CallNF_SalesCallRepresents a scheduled or completed sales call (auto/manual)Journey PlanNF_JourneyPlanPlan grouping multiple sales calls for a time windowTieringNF_TieringStores customer/prospect tiering logic and assignmentsReschedule ReasonNF_RescheduleReasonOptionSet for reasons for rescheduling callsCall ReportNF_CallReportStores reporting data for actual/planned calls3.2 Custom Fields & Attributes (with Prefix)
Table 2: Entity Attributes Listing and Details 
Entity (Schema)Attribute Name (Schema)TypeLookup Target EntityDate Property TypeOptionSet (Global/Local)DescriptionNF_SalesCallNF_CallDateDateTime-DateOnly-Scheduled date for the callNF_SalesCallNF_CallTypeOptionSet--Global: CallTypeType of call (Existing, Prospect, Training)NF_SalesCallNF_DurationWhole Number---Duration of call (mins)NF_SalesCallNF_JourneyPlanIdLookupNF_JourneyPlan--Associated Journey PlanNF_SalesCallNF_AccountIdLookupAccount--Related customer/prospectNF_SalesCallNF_RescheduleReasonIdOptionSet--Global: RescheduleReasonReason for rescheduleNF_JourneyPlanNF_StartLocationText---Home/anchor/start point for journeyNF_JourneyPlanNF_EndLocationText---End point for journeyNF_JourneyPlanNF_ModeOfTransportOptionSet--Global: ModeOfTransportCar, Public, WalkingNF_TieringNF_TierOptionSet--Global: TierTypeTier 1, Tier 2, Tier 3, etc.NF_CallReportNF_ActualCallsWhole Number---Actual number of callsNF_CallReportNF_PlannedCallsWhole Number---Planned number of calls3.3 OptionSet Definitions
OptionSet NameTypeValuesUsed InCallTypeGlobalExisting (100), Prospect (200), Training (300)NF_SalesCallRescheduleReasonGlobalCustomer Unavailable (100), ASM Unavailable (200), Holiday/Closure (300), Other (400)NF_SalesCallModeOfTransportGlobalCar (100), Public (200), Walking (300)NF_JourneyPlanTierTypeGlobalTier 1 (100), Tier 2 (200), Tier 3 (300), N/A (400)NF_Tiering3.4 Role & Privilege Matrix
RoleNF_SalesCallNF_JourneyPlanNF_TieringNF_CallReportNF_RescheduleReasonAccount Sales Manager (ASM)Create/Read/UpdateRead/UpdateReadReadReadRegional Sales Manager (RSM)Read/UpdateRead/UpdateReadReadReadRegional Sales Director (RSD)ReadReadReadReadReadSales Director (SD)ReadReadReadReadReadSystem AdminFullFullFullFullFull3.5 Customization Details & Steps (Key Examples)
* NF_SalesCall - Automated Scheduling Plugin
Description: Plugin to auto-create calls for all customers based on tiering frequency. Runs daily, checks last call date, creates new call if due.
Configuration Steps: 
1. Create NF_SalesCall entity and fields as specified above.
2. Create NF_Tiering entity with customer and frequency.
3. Develop plugin on scheduled workflow or Power Automate flow for recurring execution.
* NF_JourneyPlan - Route Optimization Plugin
Description: Plugin calculates optimal journey sequence and updates NF_SalesCall order.
Configuration Steps: 
1. Add NF_StartLocation, NF_EndLocation, and NF_ModeOfTransport fields.
2. Invoke external mapping API (e.g., Bing, Google) for route optimization.
* Business Rules/Validation
Description: Enforce min/max call volume, block outside working hours, require reason codes for reschedules.
Configuration Steps: 
1. Configure Business Rules on forms for validation.
2. Use custom workflows where advanced logic is needed.
3.6 Example Pseudocode Blocks

//{Plugin Header}: NF_SalesCall_AutoScheduler
//{Plugin} Logic - Start
For each customer with assigned NF_Tiering:
    If (Last NF_SalesCall date + Tier Frequency) <= Today:
        Create new NF_SalesCall record with scheduled date = Today + offset
        Set NF_CallType based on profile (default to Existing)
        Notify ASM of new call scheduled
//{Plugin} Logic - End
        

//{Plugin Header}: NF_JourneyPlan_RouteOptimizer
//{Plugin} Logic - Start
On Journey Plan save:
    Collect all NF_SalesCall records linked to plan
    Retrieve NF_StartLocation, NF_EndLocation, ModeOfTransport
    Call external Map API with locations, transport mode
    Receive optimized order of calls
    Update NF_SalesCall sequence/order fields accordingly
//{Plugin} Logic - End
        

//{JS Header}: NF_SalesCall_FormValidation
//{Javascript} Logic - Start
On Save:
    If (call count for day < 7 OR > 9):
        Prevent save, show warning
    If (call time outside working hours OR on holiday):
        Prevent save, show error
    If (reschedule initiated AND no reason code set):
        Prevent save, prompt for reason
//{Javascript} Logic - End
        
4. Integration Strategy
Table 3: Integration Points & Approach 
Integration AreaSourceTargetData/ProcessIntegration MethodSecurity/PerformanceCRM PlatformLegacyDynamics 365 CECustomer, Tier, CallsData Import, API (Dataflows, KingswaySoft)OAuth, Field Security, Retry on FailCalendarDynamics 365 CEOutlook/ExchangeCall/Appointment DataOOB Outlook Sync, Server-Side SyncOAuth, Sync Filters, Error LoggingNavigationCRM/MobileGoogle Maps, WazeAddresses, DirectionsURL Schemes, Custom PCF ButtonURL Signing, TokenizationReportingDynamics 365 CEPower BICall/Journey DataDirectQuery, OData FeedRead-Only, Data MaskingIntegration Considerations
* Security: Use OAuth for authentication, encrypt sensitive payloads, validate data on both ends.
* Error Handling: Log all integration failures; use retry logic for transient errors; alert support on persistent issues.
* Performance: Restrict payloads to changed data; batch updates where possible; monitor API throttling/quota.
Example Pseudocode for Integration

//{Integration Header}: CRM-Outlook Calendar Sync
//{Integration} Logic - Start
For each NF_SalesCall with status 'Scheduled':
    If call date/time updated OR record created:
        Push to Outlook as appointment via Server-Side Sync
        If push fails:
            Log error and retry up to 3 times
//{Integration} Logic - End
        
5. Data Migration
* Source Systems: Legacy CRM, Excel, other structured data repositories.
* Data Cleansing: Remove duplicates, fill mandatory fields (e.g., tiering, last call date).
* Transformation Rules: Map legacy fields to new schema with NF_ prefix; assign default values where missing.
* Migration Approach: Use Data Migration Tool (Dataflows, KingswaySoft) for initial load; scripts for transformation.
* Validation Procedures: Pre/post load validation reports; random sampling; reconciliation of record counts.
* Reconciliation: Cross-check migrated calls, plans, and tierings with business users before go-live.
Note: Schedule migration during off-peak hours. Back up all target tables/entities prior to load. 
6. PCF Component Evaluation
Use CaseComponent PurposeInputsOutputsReference/LinkVisual Map View of JourneyDisplay interactive journey route, visit sequence, locationsNF_JourneyPlan, NF_SalesCall (location data)Map UI, clickable pins, route overlayPCF Docs Click-to-Navigate ButtonLaunch navigation app with destination pre-filledAddress/CoordinatesOpens Google Maps/WazePCF Gallery Example Example PCF Pseudocode

//{PCF Header}: NF_JourneyMapControl
//{PCF} Logic - Start
On load:
    Read all NF_SalesCall records for current plan
    Extract addresses/coordinates
    Render map, draw route (in order of NF_SalesCall sequence)
    Allow pin click to show call details
    Provide "Navigate" button per pin to launch external app
//{PCF} Logic - End
        
7. Security Considerations
7.1 Customizations
* Field- and record-level security for sensitive data (e.g., financials, call objectives).
* Role-based access control for all custom entities and fields, as detailed in the matrix above.
* Audit logs enabled for all changes to calls, plans, and tiering.
7.2 Integrations
* OAuth 2.0 for all external/internal API integrations.
* Data encryption in transit (TLS 1.2+).
* Input validation and sanitation at integration endpoints.
* Token lifetime management for external service calls.
7.3 Data Migration
* Access to migration tools/scripts restricted to admins.
* All migration activities logged and reviewed.
* Rollback strategy defined for failed loads.
7.4 PCF Controls
* Restrict external link generation to whitelisted domains.
* Do not display sensitive data in PCF controls unless user has access.
* Sanitize all input/output to prevent code injection.
7.5 General
* Single sign-on with MFA where possible.
* Regular penetration testing and security reviews.
* Data loss prevention (DLP) policies enforced for all integrations and exports.
8. Visual Interpretation (Entity-Relationship Overview)
Entity Relationships (described):
* NF_SalesCall many-to-one NF_JourneyPlan
* NF_SalesCall many-to-one Account (Customer/Prospect)
* NF_SalesCall many-to-one NF_RescheduleReason (OptionSet)
* NF_JourneyPlan one-to-many NF_SalesCall
* NF_Tiering many-to-one Account
A diagrammatic ERD should be produced in Visio or Lucidchart for implementation phase, showing the above relationships with schema names. 
9. Conclusion
This TDD provides a comprehensive technical blueprint for the CRM Journey Planning MVP based on the provided FDD.
All customizations, integrations, security, and reporting requirements have been addressed. Each technical element is mapped to functional requirements and implementation steps are clearly outlined.
Further diagrams and detailed code will be produced during the build and test phases. 
